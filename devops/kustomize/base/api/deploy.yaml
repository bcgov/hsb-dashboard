kind: DeploymentConfig
apiVersion: apps.openshift.io/v1
metadata:
  name: api
  namespace: default
  annotations:
    description: Defines how to deploy api
  labels:
    name: api
    part-of: hsb
    version: 1.0.0
    component: api
    managed-by: kustomize
    created-by: jeremy.foster
    DataClass: Low
spec:
  replicas: 1
  test: false
  selector:
    part-of: hsb
    component: api
  strategy:
    rollingParams:
      intervalSeconds: 1
      maxSurge: 25%
      maxUnavailable: 25%
      timeoutSeconds: 600
      updatePeriodSeconds: 1
    type: Rolling
  triggers:
    - type: ConfigChange
    - type: ImageChange
      imageChangeParams:
        automatic: true
        containerNames:
          - api
        from:
          kind: ImageStreamTag
          namespace: e89443-tools
          name: api:dev
  template:
    metadata:
      name: api
      labels:
        part-of: hsb
        component: api
        DataClass: Low
    spec:
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      securityContext: {}
      terminationGracePeriodSeconds: 30
      containers:
        - name: api
          image: ""
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
              protocol: TCP
          resources:
            limits:
              cpu: 100m
              memory: 250Mi
            requests:
              cpu: 50m
              memory: 100Mi
          env:
            - name: ASPNETCORE_URLS
              value: http://+:8080

            - name: Logging__LogLevel__HSB
              value: Information

            - name: HTTP_PROXY
              value: http://swpxkam.gov.bc.ca:8080
            - name: HTTPS_PROXY
              value: http://swpxkam.gov.bc.ca:8080
            - name: NO_PROXY
              value: .cluster.local,.svc,10.91.0.0/16,172.30.0.0/16,127.0.0.1,localhost,dev.loginproxy.gov.bc.ca,test.loginproxy.gov.bc.ca,loginproxy.gov.bc.ca

            - name: Keycloak__Authority
              valueFrom:
                configMapKeyRef:
                  name: keycloak
                  key: KEYCLOAK_AUTHORITY
            - name: Keycloak__Audience
              valueFrom:
                configMapKeyRef:
                  name: keycloak
                  key: KEYCLOAK_AUDIENCE
            - name: Keycloak__Issuer
              valueFrom:
                configMapKeyRef:
                  name: keycloak
                  key: KEYCLOAK_ISSUER
            - name: Keycloak__Secret
              valueFrom:
                secretKeyRef:
                  name: keycloak
                  key: KEYCLOAK_CLIENT_SECRET

            - name: CSS__Environment
              valueFrom:
                configMapKeyRef:
                  name: css
                  key: CSS_ENVIRONMENT
            - name: CSS__ApiUrl
              valueFrom:
                configMapKeyRef:
                  name: css
                  key: CSS_API_URL
            - name: CSS__Authority
              valueFrom:
                configMapKeyRef:
                  name: css
                  key: CSS_AUTHORITY
            - name: CSS__IntegrationId
              valueFrom:
                secretKeyRef:
                  name: css
                  key: CSS_INTEGRATION_ID
            - name: CSS__ClientId
              valueFrom:
                secretKeyRef:
                  name: css
                  key: CSS_CLIENT_ID
            - name: CSS__Secret
              valueFrom:
                secretKeyRef:
                  name: css
                  key: CSS_SECRET

            - name: ConnectionStrings__Default
              valueFrom:
                secretKeyRef:
                  name: database
                  key: CONNECTION_STRING
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: database
                  key: DB_USER
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: database
                  key: DB_PASSWORD

          livenessProbe:
            httpGet:
              path: "/v1/health?status=live"
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 30
            timeoutSeconds: 30
            periodSeconds: 30
            successThreshold: 1
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: "/v1/health?status=ready"
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 30
            timeoutSeconds: 60
            periodSeconds: 30
            successThreshold: 1
            failureThreshold: 3
